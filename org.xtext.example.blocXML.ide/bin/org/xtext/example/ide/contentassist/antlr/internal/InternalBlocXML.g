/*
 * generated by Xtext 2.29.0
 */
grammar InternalBlocXML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.services.BlocXMLGrammarAccess;

}
@parser::members {
	private BlocXMLGrammarAccess grammarAccess;

	public void setGrammarAccess(BlocXMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleExportModel
entryRuleExportModel
:
{ before(grammarAccess.getExportModelRule()); }
	 ruleExportModel
{ after(grammarAccess.getExportModelRule()); } 
	 EOF 
;

// Rule ExportModel
ruleExportModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportModelAccess().getGroup()); }
		(rule__ExportModel__Group__0)
		{ after(grammarAccess.getExportModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNetlistType
entryRuleNetlistType
:
{ before(grammarAccess.getNetlistTypeRule()); }
	 ruleNetlistType
{ after(grammarAccess.getNetlistTypeRule()); } 
	 EOF 
;

// Rule NetlistType
ruleNetlistType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNetlistTypeAccess().getGroup()); }
		(rule__NetlistType__Group__0)
		{ after(grammarAccess.getNetlistTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayer
entryRuleLayer
:
{ before(grammarAccess.getLayerRule()); }
	 ruleLayer
{ after(grammarAccess.getLayerRule()); } 
	 EOF 
;

// Rule Layer
ruleLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayerAccess().getGroup()); }
		(rule__Layer__Group__0)
		{ after(grammarAccess.getLayerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getGroup()); }
		(rule__Component__Group__0)
		{ after(grammarAccess.getComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getGroup()); }
		(rule__Tag__Group__0)
		{ after(grammarAccess.getTagAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodes
entryRuleNodes
:
{ before(grammarAccess.getNodesRule()); }
	 ruleNodes
{ after(grammarAccess.getNodesRule()); } 
	 EOF 
;

// Rule Nodes
ruleNodes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodesAccess().getGroup()); }
		(rule__Nodes__Group__0)
		{ after(grammarAccess.getNodesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getGroup()); }
		(rule__Node__Group__0)
		{ after(grammarAccess.getNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBalise
entryRuleBalise
:
{ before(grammarAccess.getBaliseRule()); }
	 ruleBalise
{ after(grammarAccess.getBaliseRule()); } 
	 EOF 
;

// Rule Balise
ruleBalise 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaliseAccess().getSolidusGreaterThanSignKeyword()); }
		'/>'
		{ after(grammarAccess.getBaliseAccess().getSolidusGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getVarAssignment_5_0()); }
		(rule__Tag__VarAssignment_5_0)
		{ after(grammarAccess.getTagAccess().getVarAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getTagAccess().getSTRINGTerminalRuleCall_5_1()); }
		RULE_STRING
		{ after(grammarAccess.getTagAccess().getSTRINGTerminalRuleCall_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getTagAccess().getINTTerminalRuleCall_5_2()); }
		RULE_INT
		{ after(grammarAccess.getTagAccess().getINTTerminalRuleCall_5_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportModel__Group__0__Impl
	rule__ExportModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportModelAccess().getXmlVersion10EncodingUTF16Keyword_0()); }
	'<?xml version = "1.0" encoding = "UTF-16"?>'
	{ after(grammarAccess.getExportModelAccess().getXmlVersion10EncodingUTF16Keyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportModelAccess().getExportAssignment_1()); }
	(rule__ExportModel__ExportAssignment_1)
	{ after(grammarAccess.getExportModelAccess().getExportAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetlistType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__0__Impl
	rule__NetlistType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getNetlistXmlnsUrnNetlistSchemaXmlnsXsiHttpWwwW3Org2001XMLSchemaInstanceXsiSchemaLocationUrnNetlistSchemaValidationRulesXsdFamicTechnologiesIncAutomationStudioExportKeyword_0()); }
	('<netlist xmlns="urn:netlist-schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:netlist-schema ValidationRules.xsd" >\r\n\t<!--Famic Technologies Inc.-->\r\n\t<!--Automation Studio-->\r\n\t<!--Export-->')?
	{ after(grammarAccess.getNetlistTypeAccess().getNetlistXmlnsUrnNetlistSchemaXmlnsXsiHttpWwwW3Org2001XMLSchemaInstanceXsiSchemaLocationUrnNetlistSchemaValidationRulesXsdFamicTechnologiesIncAutomationStudioExportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__1__Impl
	rule__NetlistType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getDocumentsKeyword_1()); }
	'<documents>'
	{ after(grammarAccess.getNetlistTypeAccess().getDocumentsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__2__Impl
	rule__NetlistType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getDocumentNameKeyword_2()); }
	'<document Name='
	{ after(grammarAccess.getNetlistTypeAccess().getDocumentNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__3__Impl
	rule__NetlistType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getDocnameAssignment_3()); }
	(rule__NetlistType__DocnameAssignment_3)
	{ after(grammarAccess.getNetlistTypeAccess().getDocnameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__4__Impl
	rule__NetlistType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getGroup_4()); }
	(rule__NetlistType__Group_4__0)?
	{ after(grammarAccess.getNetlistTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__5__Impl
	rule__NetlistType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getGreaterThanSignKeyword_5()); }
	'>'
	{ after(grammarAccess.getNetlistTypeAccess().getGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__6__Impl
	rule__NetlistType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getLayerAssignment_6()); }
	(rule__NetlistType__LayerAssignment_6)*
	{ after(grammarAccess.getNetlistTypeAccess().getLayerAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__7__Impl
	rule__NetlistType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getDocumentKeyword_7()); }
	'</document>'
	{ after(grammarAccess.getNetlistTypeAccess().getDocumentKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__8__Impl
	rule__NetlistType__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getDocumentsKeyword_8()); }
	'</documents>'
	{ after(grammarAccess.getNetlistTypeAccess().getDocumentsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__9__Impl
	rule__NetlistType__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getNodesAssignment_9()); }
	(rule__NetlistType__NodesAssignment_9)
	{ after(grammarAccess.getNetlistTypeAccess().getNodesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getNetlistKeyword_10()); }
	'</netlist>'
	{ after(grammarAccess.getNetlistTypeAccess().getNetlistKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NetlistType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group_4__0__Impl
	rule__NetlistType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getDiagramTypeKeyword_4_0()); }
	' DiagramType='
	{ after(grammarAccess.getNetlistTypeAccess().getDiagramTypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NetlistType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNetlistTypeAccess().getDoctypeAssignment_4_1()); }
	(rule__NetlistType__DoctypeAssignment_4_1)
	{ after(grammarAccess.getNetlistTypeAccess().getDoctypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__0__Impl
	rule__Layer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getLayerNameKeyword_0()); }
	'<layer Name='
	{ after(grammarAccess.getLayerAccess().getLayerNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__1__Impl
	rule__Layer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getCoucheNameAssignment_1()); }
	(rule__Layer__CoucheNameAssignment_1)
	{ after(grammarAccess.getLayerAccess().getCoucheNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__2__Impl
	rule__Layer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getVisibleTrueSimulatedTrueLockedFalseKeyword_2()); }
	(' Visible="true" Simulated="true" Locked="false"')?
	{ after(grammarAccess.getLayerAccess().getVisibleTrueSimulatedTrueLockedFalseKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__3__Impl
	rule__Layer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getLayerAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__4__Impl
	rule__Layer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getComponentsAssignment_4()); }
	(rule__Layer__ComponentsAssignment_4)*
	{ after(grammarAccess.getLayerAccess().getComponentsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getLayerKeyword_5()); }
	'</layer>'
	{ after(grammarAccess.getLayerAccess().getLayerKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentComponentIDKeyword_0()); }
	'<component ComponentID='
	{ after(grammarAccess.getComponentAccess().getComponentComponentIDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getCompoIdAssignment_1()); }
	(rule__Component__CompoIdAssignment_1)
	{ after(grammarAccess.getComponentAccess().getCompoIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getIDAKeyword_2()); }
	' IDA='
	{ after(grammarAccess.getComponentAccess().getIDAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getCompoIdaAssignment_3()); }
	(rule__Component__CompoIdaAssignment_3)
	{ after(grammarAccess.getComponentAccess().getCompoIdaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__4__Impl
	rule__Component__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getIDFKeyword_4()); }
	' IDF='
	{ after(grammarAccess.getComponentAccess().getIDFKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__5__Impl
	rule__Component__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getCompoIdfAssignment_5()); }
	(rule__Component__CompoIdfAssignment_5)
	{ after(grammarAccess.getComponentAccess().getCompoIdfAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__6__Impl
	rule__Component__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getIDTKeyword_6()); }
	' IDT='
	{ after(grammarAccess.getComponentAccess().getIDTKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__7__Impl
	rule__Component__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getCompoIdtAssignment_7()); }
	(rule__Component__CompoIdtAssignment_7)
	{ after(grammarAccess.getComponentAccess().getCompoIdtAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__8__Impl
	rule__Component__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getGreaterThanSignKeyword_8()); }
	'>'
	{ after(grammarAccess.getComponentAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__9__Impl
	rule__Component__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getVarsAssignment_9()); }
	(rule__Component__VarsAssignment_9)*
	{ after(grammarAccess.getComponentAccess().getVarsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_10()); }
	'</component>'
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariable_typeNameKeyword_0()); }
	'<variable_type Name='
	{ after(grammarAccess.getVariableAccess().getVariable_typeNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVarNameAssignment_1()); }
	(rule__Variable__VarNameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getVarNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGreaterThanSignKeyword_2()); }
	'>'
	{ after(grammarAccess.getVariableAccess().getGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTagsAssignment_3()); }
	(rule__Variable__TagsAssignment_3)*
	{ after(grammarAccess.getVariableAccess().getTagsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariable_typeKeyword_4()); }
	'</variable_type>'
	{ after(grammarAccess.getVariableAccess().getVariable_typeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTKeyword_0()); }
	'<t'
	{ after(grammarAccess.getTagAccess().getTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__1__Impl
	rule__Tag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTagNumAssignment_1()); }
	(rule__Tag__TagNumAssignment_1)
	{ after(grammarAccess.getTagAccess().getTagNumAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__2__Impl
	rule__Tag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getNameKeyword_2()); }
	' Name='
	{ after(grammarAccess.getTagAccess().getNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__3__Impl
	rule__Tag__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTagNameAssignment_3()); }
	(rule__Tag__TagNameAssignment_3)
	{ after(grammarAccess.getTagAccess().getTagNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__4__Impl
	rule__Tag__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getGreaterThanSignKeyword_4()); }
	'>'
	{ after(grammarAccess.getTagAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__5__Impl
	rule__Tag__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getAlternatives_5()); }
	(rule__Tag__Alternatives_5)?
	{ after(grammarAccess.getTagAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__6__Impl
	rule__Tag__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTKeyword_6()); }
	'</t'
	{ after(grammarAccess.getTagAccess().getTKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__7__Impl
	rule__Tag__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTagNumAssignment_7()); }
	(rule__Tag__TagNumAssignment_7)
	{ after(grammarAccess.getTagAccess().getTagNumAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getGreaterThanSignKeyword_8()); }
	'>'
	{ after(grammarAccess.getTagAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Nodes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Nodes__Group__0__Impl
	rule__Nodes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nodes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodesAccess().getNodesKeyword_0()); }
	'<nodes>'
	{ after(grammarAccess.getNodesAccess().getNodesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nodes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Nodes__Group__1__Impl
	rule__Nodes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nodes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodesAccess().getNodesAssignment_1()); }
	(rule__Nodes__NodesAssignment_1)*
	{ after(grammarAccess.getNodesAccess().getNodesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nodes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Nodes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nodes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodesAccess().getNodesKeyword_2()); }
	'</nodes>'
	{ after(grammarAccess.getNodesAccess().getNodesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeNameKeyword_0()); }
	'<node Name='
	{ after(grammarAccess.getNodeAccess().getNodeNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeNameAssignment_1()); }
	(rule__Node__NodeNameAssignment_1)
	{ after(grammarAccess.getNodeAccess().getNodeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getTechnologyBlocKeyword_2()); }
	' Technology="Bloc">'
	{ after(grammarAccess.getNodeAccess().getTechnologyBlocKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getLinksAssignment_3()); }
	(rule__Node__LinksAssignment_3)*
	{ after(grammarAccess.getNodeAccess().getLinksAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeKeyword_4()); }
	'</node>'
	{ after(grammarAccess.getNodeAccess().getNodeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkCompIDKeyword_0()); }
	'<link CompID='
	{ after(grammarAccess.getLinkAccess().getLinkCompIDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getCompIDAssignment_1()); }
	(rule__Link__CompIDAssignment_1)
	{ after(grammarAccess.getLinkAccess().getCompIDAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getPortIDKeyword_2()); }
	' PortID='
	{ after(grammarAccess.getLinkAccess().getPortIDKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
	rule__Link__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getPortIDAssignment_3()); }
	(rule__Link__PortIDAssignment_3)
	{ after(grammarAccess.getLinkAccess().getPortIDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__4__Impl
	rule__Link__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getPortNameKeyword_4()); }
	' PortName='
	{ after(grammarAccess.getLinkAccess().getPortNameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__5__Impl
	rule__Link__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getPortNameAssignment_5()); }
	(rule__Link__PortNameAssignment_5)
	{ after(grammarAccess.getLinkAccess().getPortNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__6__Impl
	rule__Link__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getPortDirectionKeyword_6()); }
	' PortDirection='
	{ after(grammarAccess.getLinkAccess().getPortDirectionKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__7__Impl
	rule__Link__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getPortName2Assignment_7()); }
	(rule__Link__PortName2Assignment_7)
	{ after(grammarAccess.getLinkAccess().getPortName2Assignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getBaliseFermanteAssignment_8()); }
	(rule__Link__BaliseFermanteAssignment_8)
	{ after(grammarAccess.getLinkAccess().getBaliseFermanteAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExportModel__ExportAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportModelAccess().getExportNetlistTypeParserRuleCall_1_0()); }
		ruleNetlistType
		{ after(grammarAccess.getExportModelAccess().getExportNetlistTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__DocnameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetlistTypeAccess().getDocnameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getNetlistTypeAccess().getDocnameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__DoctypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetlistTypeAccess().getDoctypeSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNetlistTypeAccess().getDoctypeSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__LayerAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetlistTypeAccess().getLayerLayerParserRuleCall_6_0()); }
		ruleLayer
		{ after(grammarAccess.getNetlistTypeAccess().getLayerLayerParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NetlistType__NodesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNetlistTypeAccess().getNodesNodesParserRuleCall_9_0()); }
		ruleNodes
		{ after(grammarAccess.getNetlistTypeAccess().getNodesNodesParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__CoucheNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerAccess().getCoucheNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLayerAccess().getCoucheNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__ComponentsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerAccess().getComponentsComponentParserRuleCall_4_0()); }
		ruleComponent
		{ after(grammarAccess.getLayerAccess().getComponentsComponentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CompoIdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCompoIdSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponentAccess().getCompoIdSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CompoIdaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCompoIdaSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponentAccess().getCompoIdaSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CompoIdfAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCompoIdfSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponentAccess().getCompoIdfSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CompoIdtAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCompoIdtSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponentAccess().getCompoIdtSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__VarsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getVarsVariableParserRuleCall_9_0()); }
		ruleVariable
		{ after(grammarAccess.getComponentAccess().getVarsVariableParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VarNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVarNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getVariableAccess().getVarNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TagsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTagsTagParserRuleCall_3_0()); }
		ruleTag
		{ after(grammarAccess.getVariableAccess().getTagsTagParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__TagNumAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getTagNumINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTagAccess().getTagNumINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__TagNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getTagNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getTagAccess().getTagNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__VarAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getVarIDTerminalRuleCall_5_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTagAccess().getVarIDTerminalRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__TagNumAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getTagNumINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getTagAccess().getTagNumINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nodes__NodesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodesAccess().getNodesNodeParserRuleCall_1_0()); }
		ruleNode
		{ after(grammarAccess.getNodesAccess().getNodesNodeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodeNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getNodeNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__LinksAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getLinksLinkParserRuleCall_3_0()); }
		ruleLink
		{ after(grammarAccess.getNodeAccess().getLinksLinkParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__CompIDAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getCompIDSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getCompIDSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__PortIDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getPortIDSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getPortIDSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__PortNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getPortNameSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getPortNameSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__PortName2Assignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getPortName2STRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getPortName2STRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__BaliseFermanteAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getBaliseFermanteBaliseParserRuleCall_8_0()); }
		ruleBalise
		{ after(grammarAccess.getLinkAccess().getBaliseFermanteBaliseParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
